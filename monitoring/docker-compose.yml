version: '3.8'

x-logging:
  &default-logs
  driver: "json-file"
  options:
    tag: '{{.ImageName}}|{{.Name}}|{{.ImageFullID}}|{{.FullID}}'
    max-size: '50m'
    max-file: '5'

x-deploy:
  &default-deploy
  resources:
    limits:
      memory: 1G

networks:
  loki:

services:
  loki:
    image: grafana/loki:2.9.4
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - loki
    ports:
      - "3100:3100"
    healthcheck:
      test: [ "CMD-SHELL", "wget --no-verbose --tries=1 -O /dev/null http://localhost:3100/ready || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging: *default-logs
    deploy: *default-deploy

  promtail:
    container_name: promtail
    image: grafana/promtail:2.9.4
    volumes:
      - ./promtail-config.yml:/etc/promtail/config.yaml:ro
      - /mnt/wsl-docker-containers2:/var/lib/docker/containers/:ro
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - loki
    ports:
      - "1080:1080"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:1080/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging: *default-logs
    deploy: *default-deploy

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    entrypoint:
      - sh
      - -euc
      - |
        mkdir -p /etc/grafana/provisioning/datasources
        cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
        apiVersion: 1
        datasources:
          - name: Loki
            type: loki
            basicAuth: false
            access: proxy
            url: http://loki:3100
        EOF
        /run.sh
    ports:
      - "3000:3000"
    networks:
      - loki
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:3000/api/health || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging: *default-logs
    deploy: *default-deploy

  app_python:
    container_name: app_python
    image: happystove/app_python:1.0
    ports:
      - "8000:3000"
    healthcheck:
      test: [ "CMD-SHELL", "curl --fail http://localhost:3000 || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - ./app_python_data:/app/data
    logging: *default-logs
    deploy: *default-deploy

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - prometheus-data:/prometheus
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--storage.tsdb.retention.time=7d'
    ports:
      - '9090:9090'
    networks:
      - loki
    healthcheck:
      test: [ "CMD-SHELL", " wget --no-verbose --tries=1 -O /dev/null http://localhost:9090/-/healthy || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: always
    logging: *default-logs
    deploy: *default-deploy

volumes:
  prometheus-data:
